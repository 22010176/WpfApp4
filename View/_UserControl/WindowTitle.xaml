<UserControl x:Class="WpfApp4.View._UserControl.WindowTitle"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:local="clr-namespace:WpfApp4.View._UserControl"
             mc:Ignorable="d" 
             d:DesignHeight="35" d:DesignWidth="800">
  <UserControl.Resources>
    <Style TargetType="Label" x:Key="WindowTitle">
      <Setter Property="Margin" Value="5,0"/>
      <Setter Property="FontSize" Value="13"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="FontWeight" Value="DemiBold"/>
    </Style>

    <Style TargetType="Button" x:Key="WindowBtn">
      <Setter Property="Width" Value="55"/>
      <Setter Property="Height" Value="35"/>
      <Setter Property="Padding" Value="13"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="CheckBox" x:Key="WindowBtnCheck">
      <Setter Property="Width" Value="55"/>
      <Setter Property="Height" Value="35"/>
      <Setter Property="FontSize" Value="12"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <ControlTemplate x:Key="WindowButton" TargetType="{x:Type ButtonBase}">
      <ControlTemplate.Resources>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#ADADAD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Transparent"/>

        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#d0d0d0"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>

        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#ADADAD"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#505050"/>
      </ControlTemplate.Resources>

      <Grid x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
      </Grid>

      <ControlTemplate.Triggers>
        <Trigger Property="Button.IsDefaulted" Value="true">
        </Trigger>

        <Trigger Property="IsMouseOver" Value="true">
          <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
        </Trigger>

        <Trigger Property="IsPressed" Value="true">
          <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
        </Trigger>

        <Trigger Property="IsEnabled" Value="false">
          <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
          <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CloseBtn" TargetType="{x:Type ButtonBase}">
      <ControlTemplate.Resources>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF1010"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Transparent"/>

        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#ff5050"/>
        <SolidColorBrush x:Key="Button.Pressed.Foreground" Color="#f0f0f0"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="Transparent"/>

        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#ADADAD"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#505050"/>
      </ControlTemplate.Resources>

      <Grid x:Name="border" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" SnapsToDevicePixels="true" Width="{TemplateBinding Width}">
        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
      </Grid>

      <ControlTemplate.Triggers>
        <Trigger Property="Button.IsDefaulted" Value="true"/>

        <Trigger Property="IsMouseOver" Value="true">
          <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
        </Trigger>

        <Trigger Property="IsPressed" Value="true">
          <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
        </Trigger>

        <Trigger Property="IsEnabled" Value="false">
          <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
          <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>

  </UserControl.Resources>

  <Grid MouseDown="Grid_MouseDown" Background="#f0f0f0">
    <Grid.ColumnDefinitions>
      <ColumnDefinition/>
      <ColumnDefinition Width="auto"/>
    </Grid.ColumnDefinitions>

    <StackPanel Grid.Column="0" Orientation="Horizontal">
      <Ellipse Width="30" Height="30" Margin="10,0">
        <Ellipse.Fill>
          <ImageBrush x:Name="WindowIcon" ImageSource="/Asset/Icon.jpg"/>
        </Ellipse.Fill>
      </Ellipse>
      
      <Label Content="{Binding Title}" Style="{StaticResource WindowTitle}"/>
    </StackPanel>

    <StackPanel Grid.Column="1" HorizontalAlignment="Left" Orientation="Horizontal">
      <Button x:Name="MinimizeBtn" Template="{StaticResource WindowButton}" Style="{StaticResource WindowBtn}" Click="MinimizeBtn_Click" Padding="22,13">
        <fa:ImageAwesome Icon="WindowMinimize" Foreground="Black"/>
      </Button>

      <CheckBox x:Name="WindowSizeChangeBtn" Template="{StaticResource WindowButton}" Click="WindowSizeChangeBtn_Click">
        <fa:FontAwesome Icon="WindowMaximize" Name="Icon"/>

        <CheckBox.Style>
          <Style TargetType="CheckBox" BasedOn="{StaticResource WindowBtnCheck}">
            <Style.Triggers>
              <Trigger Property="IsChecked" Value="True">
                <Setter Property="fa:Awesome.Content" Value="WindowRestore"/>
              </Trigger>

              <Trigger Property="IsChecked" Value="False">
                <Setter Property="fa:Awesome.Content" Value="WindowMaximize"/>
              </Trigger>
            </Style.Triggers>
          </Style>
        </CheckBox.Style>
      </CheckBox>

      <Button x:Name="CloseWindowBtn" Template="{StaticResource CloseBtn}" Style="{StaticResource WindowBtn}" Click="Button_Click">
        <fa:ImageAwesome Icon="Close" Foreground="Black"/>
      </Button>
    </StackPanel>
  </Grid>
</UserControl>
